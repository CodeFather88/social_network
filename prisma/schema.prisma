generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

model User {
    id String @id @default(uuid())
    email String @unique
    password String
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @map("updated_at")
    roles Role[]
    token Token[]
    messages Message[]
    chats UserChat[]
    @@map("users")
}

model Token {
    token String @unique
    exp DateTime
    user User @relation(fields: [userId], references: [id])
    userId String
    userAgent String @map("user_agent")
    @@map("tokens")
}

model Chat {
    id String @id @default(uuid())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @map("updated_at")
    usersCount Int
    messages Message[]
    users UserChat[]
    name String @default("Групповой чат")
    creator String
    @@map("chats")
}

model Message {
    id String @id @default(uuid())
    text String
    userId String
    chatId String
    user User @relation(fields: [userId], references: [id])
    chat Chat @relation(fields: [chatId], references: [id])
    @@map("messages")
}

model UserChat {
    userId String
    chatId String
    user User @relation(fields: [userId], references: [id])
    chat Chat @relation(fields: [chatId], references: [id])
    @@id([userId, chatId])
    @@map("user_chats")
}

enum Role {
    ADMIN
    USER
    SUPERADMIN
}
